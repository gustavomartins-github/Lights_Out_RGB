# PREMISSAS 

    1 -  nas posições 1, 3, 5, 7 está a cor/estado inicial de um rerspectivo botão.
    2 -  nas posições 0, 2, 4, 6 está a condição/tipo de um respectivo  botão.
    3 -  nas posições 0 e 1 ; 2 e 3; 4 e 5; 6 e 7; estão as informações, respectivamente, dos botões 1, 2, 3 e 4.
    4 -  à matriz sempre será quadrática N x N, com N par, pois é necessário informação sobre a condição e a cor de cada botão.
    5 -  ao clicar em um botão W, ele vira R.
    6 -  ao clicar em um botão R, ele vira G.
    7 -  ao clicar em um botão G, ele vira B.
    8 -  ao clicar em um botão B, ele vira W.
-----------------------------------------------------------------------------------------------------------------------------------

# I/0 DE TESTES 

Entrada:

*R-W-W-W
-G|B-R-W
-W-W_W-W
-W-W-W#W

Saída:

(click 2 3);(click 2 3);(click 0 0);(click 0 0);(click 0 0)

-----------------------------------------------------------------------------------------------------------------------------------
 
# FUNÇÕES ÚTEIS 

1 - Leitor de entradas para o exemplo de teste

while (scanf(" %s", map[aux++]) == 1 and aux <= 3);


2 - Printar a matriz para o exemplo de teste

printf("\n-------- EXIBINDO A MATRIZ --------\n\n");
for(int i=0; i<=3; i++){
    	printf("%s\n", map[i]);
	}

3 - Exibir a sentinela para o laço que escreverá a matriz final

printf("%d\n\n", size);
size = (size+1)/2;
printf("\n\n%d", size);
-----------------------------------------------------------------------------------------------------------------------------------